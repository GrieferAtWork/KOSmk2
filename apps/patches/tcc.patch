diff -Naur tcc-0.9.26/configure kos-tcc-0.9.26/configure
--- tcc-0.9.26/configure	2013-02-15 15:24:00.000000000 +0100
+++ kos-tcc-0.9.26/configure	2017-10-26 11:47:58.036275900 +0200
@@ -49,13 +49,14 @@
 cpu=`uname -m`
 
 # OS specific
-targetos=`uname -s`
-case $targetos in
-  MINGW32*)  mingw32=yes;;
-  DragonFly) noldl=yes;;
-  OpenBSD)   noldl=yes;;
-  *) ;;
-esac
+targetos="KOS"
+# targetos=`uname -s`
+# case $targetos in
+#   MINGW32*)  mingw32=yes;;
+#   DragonFly) noldl=yes;;
+#   OpenBSD)   noldl=yes;;
+#   *) ;;
+# esac
 
 # find source path
 # XXX: we assume an absolute path is given when launching configure, 
@@ -410,32 +411,33 @@
 echo "#define GCC_MAJOR $gcc_major" >> $TMPH
 echo "#define GCC_MINOR $gcc_minor" >> $TMPH
 
-if test "$cpu" = "x86" ; then
-  echo "ARCH=i386" >> config.mak
-  echo "#define HOST_I386 1" >> $TMPH
-elif test "$cpu" = "x86-64" ; then
-  echo "ARCH=x86-64" >> config.mak
-  echo "#define HOST_X86_64 1" >> $TMPH
-elif test "$cpu" = "armv4l" ; then
-  echo "ARCH=arm" >> config.mak
-  echo "#define HOST_ARM 1" >> $TMPH
-  echo "#define TCC_ARM_VERSION $cpuver" >> $TMPH
-elif test "$cpu" = "powerpc" ; then
-  echo "ARCH=ppc" >> config.mak
-  echo "#define HOST_PPC 1" >> $TMPH
-elif test "$cpu" = "mips" ; then
-  echo "ARCH=mips" >> config.mak
-  echo "#define HOST_MIPS 1" >> $TMPH
-elif test "$cpu" = "s390" ; then
-  echo "ARCH=s390" >> config.mak
-  echo "#define HOST_S390 1" >> $TMPH
-elif test "$cpu" = "alpha" ; then
-  echo "ARCH=alpha" >> config.mak
-  echo "#define HOST_ALPHA 1" >> $TMPH
-else
-  echo "Unsupported CPU"
-  exit 1
-fi
+echo "ARCH=i386" >> config.mak
+# if test "$cpu" = "x86" ; then
+#   echo "ARCH=i386" >> config.mak
+#   echo "#define HOST_I386 1" >> $TMPH
+# elif test "$cpu" = "x86-64" ; then
+#   echo "ARCH=x86-64" >> config.mak
+#   echo "#define HOST_X86_64 1" >> $TMPH
+# elif test "$cpu" = "armv4l" ; then
+#   echo "ARCH=arm" >> config.mak
+#   echo "#define HOST_ARM 1" >> $TMPH
+#   echo "#define TCC_ARM_VERSION $cpuver" >> $TMPH
+# elif test "$cpu" = "powerpc" ; then
+#   echo "ARCH=ppc" >> config.mak
+#   echo "#define HOST_PPC 1" >> $TMPH
+# elif test "$cpu" = "mips" ; then
+#   echo "ARCH=mips" >> config.mak
+#   echo "#define HOST_MIPS 1" >> $TMPH
+# elif test "$cpu" = "s390" ; then
+#   echo "ARCH=s390" >> config.mak
+#   echo "#define HOST_S390 1" >> $TMPH
+# elif test "$cpu" = "alpha" ; then
+#   echo "ARCH=alpha" >> config.mak
+#   echo "#define HOST_ALPHA 1" >> $TMPH
+# else
+#   echo "Unsupported CPU"
+#   exit 1
+# fi
 
 echo "TARGETOS=$targetos" >> config.mak
 
diff -Naur tcc-0.9.26/lib/Makefile kos-tcc-0.9.26/lib/Makefile
--- tcc-0.9.26/lib/Makefile	2013-02-15 15:24:00.000000000 +0100
+++ kos-tcc-0.9.26/lib/Makefile	2017-10-26 11:51:44.395292400 +0200
@@ -61,6 +61,11 @@
  TGT = -DTCC_TARGET_I386
  XCC ?= $(TCC) -B$(TOP)
 else
+ifeq "$(TARGET)" "i686-kos"
+ OBJ = $(addprefix $(DIR)/,$(I386_O))
+ TGT = -DTCC_TARGET_I386
+ XCC ?= $(CC)
+else
 ifeq "$(TARGET)" "x86_64"
  OBJ = $(addprefix $(DIR)/,$(X86_64_O))
  TGT = -DTCC_TARGET_X86_64
@@ -70,6 +75,7 @@
 endif
 endif
 endif
+endif
 endif
 
 XFLAGS = $(CPPFLAGS) $(CFLAGS) $(TGT)
diff -Naur tcc-0.9.26/libtcc.c kos-tcc-0.9.26/libtcc.c
--- tcc-0.9.26/libtcc.c	2013-02-15 15:24:00.000000000 +0100
+++ kos-tcc-0.9.26/libtcc.c	2017-10-26 11:48:47.125482900 +0200
@@ -1347,7 +1347,7 @@
         !s->nostdlib) {
         if (output_type != TCC_OUTPUT_DLL)
             tcc_add_crt(s, "crt1.o");
-        tcc_add_crt(s, "crti.o");
+        //tcc_add_crt(s, "crti.o");
     }
 #endif
     return 0;
diff -Naur tcc-0.9.26/tccelf.c kos-tcc-0.9.26/tccelf.c
--- tcc-0.9.26/tccelf.c	2013-02-15 15:24:00.000000000 +0100
+++ kos-tcc-0.9.26/tccelf.c	2017-10-26 11:49:26.537570100 +0200
@@ -1367,8 +1367,8 @@
         tcc_add_support(s1, "libtcc1.a");
 #endif
         /* add crt end if not memory output */
-        if (s1->output_type != TCC_OUTPUT_MEMORY)
-            tcc_add_crt(s1, "crtn.o");
+        //if (s1->output_type != TCC_OUTPUT_MEMORY)
+        //    tcc_add_crt(s1, "crtn.o");
     }
 }
 
@@ -2202,7 +2202,7 @@
         mode = 0666;
     else
         mode = 0777;
-    unlink(filename);
+    //unlink(filename);
     fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY, mode); 
     if (fd < 0) {
         tcc_error_noabort("could not write '%s'", filename);
