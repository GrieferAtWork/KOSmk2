/* Copyright (c) 2017 Griefer@Work                                            *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

BEGIN APPLICATION("init")
	//SET_COMPILER("c++")
	SET_OUTPUT(CONFIG_APP_PATH "/init")
	SET_DISKFILE("/bin/init")
	SOURCE("init/*.c")
END
BEGIN APPLICATION("terminal-vga")
	DEFINE("CONFIG_LIBTERM_NO_CLOSURE=1")
	SET_OUTPUT(CONFIG_APP_PATH "/terminal-vga")
	SET_DISKFILE("/bin/terminal-vga")
	SOURCE("terminal-vga/*.c")
END
//BEGIN_NEW PROJECT("elfimg")
//	SET_COMPILER("host-c")
//	SET_LINKER("host-c")
//	SET_OUTPUT("/bin/apps/elfimg")
//	SET_DISKFILE(none)
//	SOURCE("elfimg/*.c")
//END
//BEGIN_NEW PROJECT("elf2lib")
//	SET_COMPILER("host-c")
//	SET_LINKER("host-c")
//	SET_OUTPUT("/bin/apps/elf2lib")
//	SET_DISKFILE(none)
//	SOURCE("elf2lib/*.c")
//END

#if __has_include("private/.sources")
#include "private/.sources"
#endif

//BEGIN APPLICATION("my_test")
//	SET_OUTPUT(CONFIG_APP_PATH "/my_test")
//	SET_DISKFILE("/opt/my_test")
//	SOURCE("test/my_test.c")
//END

BEGIN APPLICATION("dosfs")
	SET_OUTPUT(CONFIG_APP_PATH "/dosfs")
	SET_DISKFILE("/bin/dosfs")
	SOURCE("misc/dosfs.c")
END

BEGIN APPLICATION("shm-demo")
	SET_OUTPUT(CONFIG_APP_PATH "/shm-demo")
	SET_DISKFILE("/bin/shm-demo")
	SOURCE("misc/shm-demo.c")
END

BEGIN APPLICATION("playground")
	SET_OUTPUT(CONFIG_APP_PATH "/playground")
	SET_DISKFILE("/opt/playground")
	SOURCE("test/playground.c")
END

/* Test compiling C++ headers with something other than MSVC. */
BEGIN APPLICATION("gcc_dos_userapp")
	//SET_COMPILER("c++")
	//SET_LINKER("c++")
	SET_LINKER("c")
	C_FLAGS("-std=c11")

	SET_OUTPUT(CONFIG_APP_PATH "/elf_dos_userapp")
	SET_DISKFILE("/bin/elf_dos_userapp")
	SOURCE("dos_userapp/*.c")
END

DISK_SYNC(CONFIG_APP_PATH "/dos_userapp.*","/bin/")
DISK_SYNC("hybrid_demo/main.exe","/bin/hybrid-demo.exe")


